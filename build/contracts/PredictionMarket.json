{
  "contractName": "PredictionMarket",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "bets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "betsPerGambler",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "electionFinished",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "result",
      "outputs": [
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "winner",
          "type": "uint8"
        },
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "loser",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "_side",
          "type": "uint8"
        }
      ],
      "name": "placeBet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawGain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "_winner",
          "type": "uint8"
        },
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "_loser",
          "type": "uint8"
        }
      ],
      "name": "reportResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.3+commit.9bfce1f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"bets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"betsPerGambler\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"electionFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"_side\",\"type\":\"uint8\"}],\"name\":\"placeBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"_winner\",\"type\":\"uint8\"},{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"_loser\",\"type\":\"uint8\"}],\"name\":\"reportResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"result\",\"outputs\":[{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"winner\",\"type\":\"uint8\"},{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"loser\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawGain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/ma/Desktop/DEV/BLOCKCHAIN-DEV/TutoYoutube/TUTO-Gamgle/contracts/PredictionMarket.sol\":\"PredictionMarket\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ma/Desktop/DEV/BLOCKCHAIN-DEV/TutoYoutube/TUTO-Gamgle/contracts/PredictionMarket.sol\":{\"keccak256\":\"0x61ace22b1e99d288b7bbb0ec065fcd9d7d78aae325eb7703367f0a4ce8868dce\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://01ffc4a218afbda1c04cf084dae7e360ca11cc39a8657b8451b46e2239df2464\",\"dweb:/ipfs/QmT3gpxjYhTHGyHsoK6Y7pn3Z5WzyLLhkt74mLFJCRuEzm\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610a09380380610a098339818101604052602081101561003357600080fd5b810190808051906020019092919050505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610974806100956000396000f3fe60806040526004361061007b5760003560e01c80637dc0d1d01161004e5780637dc0d1d01461015b5780637e0ecc001461019c5780639d5a3739146101ee578063beab6e7e146102605761007b565b80632b539c861461008057806343046844146100975780634ec942b7146100c85780636537214714610113575b600080fd5b34801561008c57600080fd5b5061009561028d565b005b6100c6600480360360208110156100ad57600080fd5b81019080803560ff1690602001909291905050506105b1565b005b3480156100d457600080fd5b50610111600480360360408110156100eb57600080fd5b81019080803560ff169060200190929190803560ff1690602001909291905050506106e8565b005b34801561011f57600080fd5b5061012861089c565b6040518083600181111561013857fe5b815260200182600181111561014957fe5b81526020019250505060405180910390f35b34801561016757600080fd5b506101706108c8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101a857600080fd5b506101d8600480360360208110156101bf57600080fd5b81019080803560ff1690602001909291905050506108ee565b6040518082815260200191505060405180910390f35b3480156101fa57600080fd5b5061024a6004803603604081101561021157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050610906565b6040518082815260200191505060405180910390f35b34801561026c57600080fd5b5061027561092b565b60405180821515815260200191505060405180910390f35b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060000160009054906101000a900460ff1660018111156102ed57fe5b60018111156102f857fe5b81526020019081526020016000205490506000811161037f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f796f7520646f206e6f74206861766520616e792077696e6e696e67206265740081525060200191505060405180910390fd5b60011515600160149054906101000a900460ff16151514610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f656c656374696f6e206e6f742066696e6973686564000000000000000000000081525060200191505060405180910390fd5b6000600260008060000160009054906101000a900460ff16600181111561042b57fe5b600181111561043657fe5b81526020019081526020016000205482600260008060000160019054906101000a900460ff16600181111561046757fe5b600181111561047257fe5b815260200190815260200160002054028161048957fe5b04820190506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060018111156104dd57fe5b60018111156104e857fe5b8152602001908152602001600020819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018081111561054957fe5b600181111561055457fe5b8152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156105ac573d6000803e3d6000fd5b505050565b60001515600160149054906101000a900460ff1615151461063a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f656c656374696f6e2069732066696e697368656400000000000000000000000081525060200191505060405180910390fd5b346002600083600181111561064b57fe5b600181111561065657fe5b81526020019081526020016000206000828254019250508190555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360018111156106bf57fe5b60018111156106ca57fe5b81526020019081526020016000206000828254019250508190555050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f6f6e6c79206f7261636c6500000000000000000000000000000000000000000081525060200191505060405180910390fd5b60001515600160149054906101000a900460ff16151514610834576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f656c656374696f6e2069732066696e697368656400000000000000000000000081525060200191505060405180910390fd5b816000800160006101000a81548160ff0219169083600181111561085457fe5b0217905550806000800160016101000a81548160ff0219169083600181111561087957fe5b021790555060018060146101000a81548160ff0219169083151502179055505050565b60008060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b6003602052816000526040600020602052806000526040600020600091509150505481565b600160149054906101000a900460ff168156fea2646970667358221220e692c81ae67d3f99a632c7bbebec879a48c434ee13081c2f59a052d24bbb3c0c64736f6c63430007030033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80637dc0d1d01161004e5780637dc0d1d01461015b5780637e0ecc001461019c5780639d5a3739146101ee578063beab6e7e146102605761007b565b80632b539c861461008057806343046844146100975780634ec942b7146100c85780636537214714610113575b600080fd5b34801561008c57600080fd5b5061009561028d565b005b6100c6600480360360208110156100ad57600080fd5b81019080803560ff1690602001909291905050506105b1565b005b3480156100d457600080fd5b50610111600480360360408110156100eb57600080fd5b81019080803560ff169060200190929190803560ff1690602001909291905050506106e8565b005b34801561011f57600080fd5b5061012861089c565b6040518083600181111561013857fe5b815260200182600181111561014957fe5b81526020019250505060405180910390f35b34801561016757600080fd5b506101706108c8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101a857600080fd5b506101d8600480360360208110156101bf57600080fd5b81019080803560ff1690602001909291905050506108ee565b6040518082815260200191505060405180910390f35b3480156101fa57600080fd5b5061024a6004803603604081101561021157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050610906565b6040518082815260200191505060405180910390f35b34801561026c57600080fd5b5061027561092b565b60405180821515815260200191505060405180910390f35b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060000160009054906101000a900460ff1660018111156102ed57fe5b60018111156102f857fe5b81526020019081526020016000205490506000811161037f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f796f7520646f206e6f74206861766520616e792077696e6e696e67206265740081525060200191505060405180910390fd5b60011515600160149054906101000a900460ff16151514610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f656c656374696f6e206e6f742066696e6973686564000000000000000000000081525060200191505060405180910390fd5b6000600260008060000160009054906101000a900460ff16600181111561042b57fe5b600181111561043657fe5b81526020019081526020016000205482600260008060000160019054906101000a900460ff16600181111561046757fe5b600181111561047257fe5b815260200190815260200160002054028161048957fe5b04820190506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060018111156104dd57fe5b60018111156104e857fe5b8152602001908152602001600020819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018081111561054957fe5b600181111561055457fe5b8152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156105ac573d6000803e3d6000fd5b505050565b60001515600160149054906101000a900460ff1615151461063a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f656c656374696f6e2069732066696e697368656400000000000000000000000081525060200191505060405180910390fd5b346002600083600181111561064b57fe5b600181111561065657fe5b81526020019081526020016000206000828254019250508190555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360018111156106bf57fe5b60018111156106ca57fe5b81526020019081526020016000206000828254019250508190555050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f6f6e6c79206f7261636c6500000000000000000000000000000000000000000081525060200191505060405180910390fd5b60001515600160149054906101000a900460ff16151514610834576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f656c656374696f6e2069732066696e697368656400000000000000000000000081525060200191505060405180910390fd5b816000800160006101000a81548160ff0219169083600181111561085457fe5b0217905550806000800160016101000a81548160ff0219169083600181111561087957fe5b021790555060018060146101000a81548160ff0219169083151502179055505050565b60008060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b6003602052816000526040600020602052806000526040600020600091509150505481565b600160149054906101000a900460ff168156fea2646970667358221220e692c81ae67d3f99a632c7bbebec879a48c434ee13081c2f59a052d24bbb3c0c64736f6c63430007030033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "63:1381:1:-:0;;;392:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;440:7;431:6;;:16;;;;;;;;;;;;;;;;;;392:62;63:1381;;;;;;",
  "deployedSourceMap": "63:1381:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;679:473;;;;;;;;;;;;;:::i;:::-;;460:213;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1158:284;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;194:20;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;221:21;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;283:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;322:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;248:28;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;679:473;722:15;740:14;:26;755:10;740:26;;;;;;;;;;;;;;;:41;767:6;:13;;;;;;;;;;;;740:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;722:59;;812:1;799:10;:14;791:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;887:4;867:24;;:16;;;;;;;;;;;:24;;;859:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;927:9;986:4;:19;991:6;:13;;;;;;;;;;;;986:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;973:10;952:4;:18;957:6;:12;;;;;;;;;;;;952:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;:31;:53;;;;;;939:10;:66;927:78;;1057:1;1015:14;:26;1030:10;1015:26;;;;;;;;;;;;;;;:39;1042:11;1015:39;;;;;;;;;;;;;;;;;;;;;;;;;;;:43;;;;1109:1;1068:14;:26;1083:10;1068:26;;;;;;;;;;;;;;;:38;1095:10;1068:38;;;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;;1120:10;:19;;:25;1140:4;1120:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;679:473;;:::o;460:213::-;545:5;525:25;;:16;;;;;;;;;;;:25;;;517:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;600:9;585:4;:11;590:5;585:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;656:9;619:14;:26;634:10;619:26;;;;;;;;;;;;;;;:33;646:5;619:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;:46;;;;;;;;;;;460:213;:::o;1158:284::-;1244:10;1234:20;;:6;;;;;;;;;;;:20;;;1226:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1308:5;1288:25;;:16;;;;;;;;;;;:25;;;1280:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1364:7;1348:6;:13;;;:23;;;;;;;;;;;;;;;;;;;;;;;;1396:6;1381;:12;;;:21;;;;;;;;;;;;;;;;;;;;;;;;1431:4;1412:16;;:23;;;;;;;;;;;;;;;;;;1158:284;;:::o;194:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;221:21::-;;;;;;;;;;;;;:::o;283:33::-;;;;;;;;;;;;;;;;;:::o;322:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;248:28::-;;;;;;;;;;;;;:::o",
  "source": "//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.7.3;\n\ncontract PredictionMarket {\n    enum Side { Macron, Lepen }\n    struct Result {\n        Side winner;\n        Side loser;\n    }\n    Result public result;\n\n    address public oracle;\n    bool public electionFinished;\n\n    mapping(Side => uint) public bets;\n    mapping(address => mapping(Side => uint)) public betsPerGambler;\n\n    constructor(address _oracle) {\n        oracle = _oracle;\n    }\n\n    function placeBet(Side _side) external payable {\n        require(electionFinished == false, 'election is finished');\n        bets[_side] += msg.value;\n        betsPerGambler[msg.sender][_side] += msg.value; \n    }\n\n    function withdrawGain() external {\n        uint gamblerBet = betsPerGambler[msg.sender][result.winner];\n        require(gamblerBet > 0, 'you do not have any winning bet');\n        require(electionFinished == true, 'election not finished');\n        uint gain = gamblerBet + bets[result.loser] * gamblerBet / bets[result.winner];\n        betsPerGambler[msg.sender][Side.Macron] = 0;\n        betsPerGambler[msg.sender][Side.Lepen] = 0;\n        msg.sender.transfer(gain);\n    }\n\n    function reportResult(Side _winner, Side _loser) external {\n        require(oracle == msg.sender, 'only oracle');\n        require(electionFinished == false, 'election is finished');\n        result.winner = _winner;\n        result.loser = _loser;\n        electionFinished = true;\n    }\n}",
  "sourcePath": "/Users/ma/Desktop/DEV/BLOCKCHAIN-DEV/TutoYoutube/TUTO-Gamgle/contracts/PredictionMarket.sol",
  "ast": {
    "absolutePath": "/Users/ma/Desktop/DEV/BLOCKCHAIN-DEV/TutoYoutube/TUTO-Gamgle/contracts/PredictionMarket.sol",
    "exportedSymbols": {
      "PredictionMarket": [
        210
      ]
    },
    "id": 211,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 210,
        "linearizedBaseContracts": [
          210
        ],
        "name": "PredictionMarket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PredictionMarket.Side",
            "id": 37,
            "members": [
              {
                "id": 35,
                "name": "Macron",
                "nodeType": "EnumValue",
                "src": "107:6:1"
              },
              {
                "id": 36,
                "name": "Lepen",
                "nodeType": "EnumValue",
                "src": "115:5:1"
              }
            ],
            "name": "Side",
            "nodeType": "EnumDefinition",
            "src": "95:27:1"
          },
          {
            "canonicalName": "PredictionMarket.Result",
            "id": 42,
            "members": [
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "winner",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "151:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$37",
                  "typeString": "enum PredictionMarket.Side"
                },
                "typeName": {
                  "id": 38,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 37,
                  "src": "151:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$37",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "mutability": "mutable",
                "name": "loser",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "172:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$37",
                  "typeString": "enum PredictionMarket.Side"
                },
                "typeName": {
                  "id": 40,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 37,
                  "src": "172:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$37",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Result",
            "nodeType": "StructDefinition",
            "scope": 210,
            "src": "127:62:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "65372147",
            "id": 44,
            "mutability": "mutable",
            "name": "result",
            "nodeType": "VariableDeclaration",
            "scope": 210,
            "src": "194:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Result_$42_storage",
              "typeString": "struct PredictionMarket.Result"
            },
            "typeName": {
              "id": 43,
              "name": "Result",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 42,
              "src": "194:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Result_$42_storage_ptr",
                "typeString": "struct PredictionMarket.Result"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "id": 46,
            "mutability": "mutable",
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "scope": 210,
            "src": "221:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "221:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "beab6e7e",
            "id": 48,
            "mutability": "mutable",
            "name": "electionFinished",
            "nodeType": "VariableDeclaration",
            "scope": 210,
            "src": "248:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 47,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "248:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7e0ecc00",
            "id": 52,
            "mutability": "mutable",
            "name": "bets",
            "nodeType": "VariableDeclaration",
            "scope": 210,
            "src": "283:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
              "typeString": "mapping(enum PredictionMarket.Side => uint256)"
            },
            "typeName": {
              "id": 51,
              "keyType": {
                "id": 49,
                "name": "Side",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 37,
                "src": "291:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$37",
                  "typeString": "enum PredictionMarket.Side"
                }
              },
              "nodeType": "Mapping",
              "src": "283:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
                "typeString": "mapping(enum PredictionMarket.Side => uint256)"
              },
              "valueType": {
                "id": 50,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "299:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d5a3739",
            "id": 58,
            "mutability": "mutable",
            "name": "betsPerGambler",
            "nodeType": "VariableDeclaration",
            "scope": 210,
            "src": "322:63:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$37_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 53,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "330:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "322:41:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$37_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
              },
              "valueType": {
                "id": 56,
                "keyType": {
                  "id": 54,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 37,
                  "src": "349:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$37",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "nodeType": "Mapping",
                "src": "341:21:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
                  "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                },
                "valueType": {
                  "id": 55,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "357:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "421:33:1",
              "statements": [
                {
                  "expression": {
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "431:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 64,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "440:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "431:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "431:16:1"
                }
              ]
            },
            "id": 68,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "404:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "403:17:1"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "421:0:1"
            },
            "scope": 210,
            "src": "392:62:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "507:166:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74,
                          "name": "electionFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "525:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "545:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "525:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656c656374696f6e2069732066696e6973686564",
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "552:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b986f5898326f417b081556bd907c58c5b8ef0652fc690b771b44307f001565f",
                          "typeString": "literal_string \"election is finished\""
                        },
                        "value": "election is finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b986f5898326f417b081556bd907c58c5b8ef0652fc690b771b44307f001565f",
                          "typeString": "literal_string \"election is finished\""
                        }
                      ],
                      "id": 73,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "517:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "517:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "517:58:1"
                },
                {
                  "expression": {
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 80,
                        "name": "bets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "585:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 82,
                      "indexExpression": {
                        "id": 81,
                        "name": "_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "590:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$37",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "585:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 83,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "600:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "600:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "585:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "585:24:1"
                },
                {
                  "expression": {
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 87,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "619:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$37_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 91,
                        "indexExpression": {
                          "expression": {
                            "id": 88,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "634:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "634:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "619:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 92,
                      "indexExpression": {
                        "id": 90,
                        "name": "_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "646:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$37",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "619:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 93,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "656:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 94,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "656:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "619:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "619:46:1"
                }
              ]
            },
            "functionSelector": "43046844",
            "id": 98,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "placeBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "_side",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "478:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$37",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 37,
                    "src": "478:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$37",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "477:12:1"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "507:0:1"
            },
            "scope": 210,
            "src": "460:213:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "712:440:1",
              "statements": [
                {
                  "assignments": [
                    102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102,
                      "mutability": "mutable",
                      "name": "gamblerBet",
                      "nodeType": "VariableDeclaration",
                      "scope": 169,
                      "src": "722:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "722:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 110,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 103,
                        "name": "betsPerGambler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "740:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$37_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                        }
                      },
                      "id": 106,
                      "indexExpression": {
                        "expression": {
                          "id": 104,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "755:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "755:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "740:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
                        "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                      }
                    },
                    "id": 109,
                    "indexExpression": {
                      "expression": {
                        "id": 107,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "767:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$42_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "767:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$37",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "740:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "722:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 112,
                          "name": "gamblerBet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "799:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "812:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "799:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7520646f206e6f74206861766520616e792077696e6e696e6720626574",
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "815:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_580c326cdba3173fc617bf584c3e1a4fdc48208658005920e02bf236cdbddda5",
                          "typeString": "literal_string \"you do not have any winning bet\""
                        },
                        "value": "you do not have any winning bet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_580c326cdba3173fc617bf584c3e1a4fdc48208658005920e02bf236cdbddda5",
                          "typeString": "literal_string \"you do not have any winning bet\""
                        }
                      ],
                      "id": 111,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "791:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "791:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "791:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 119,
                          "name": "electionFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "867:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "887:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "867:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656c656374696f6e206e6f742066696e6973686564",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "893:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7e6bdb27abe05a89bb6860279b9b8caf97f66bf335fd3b12194199de6a23f11",
                          "typeString": "literal_string \"election not finished\""
                        },
                        "value": "election not finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7e6bdb27abe05a89bb6860279b9b8caf97f66bf335fd3b12194199de6a23f11",
                          "typeString": "literal_string \"election not finished\""
                        }
                      ],
                      "id": 118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "859:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "859:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "859:58:1"
                },
                {
                  "assignments": [
                    126
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 126,
                      "mutability": "mutable",
                      "name": "gain",
                      "nodeType": "VariableDeclaration",
                      "scope": 169,
                      "src": "927:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 125,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "927:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 140,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 127,
                      "name": "gamblerBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "939:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 128,
                            "name": "bets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "952:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
                              "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                            }
                          },
                          "id": 131,
                          "indexExpression": {
                            "expression": {
                              "id": 129,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "957:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Result_$42_storage",
                                "typeString": "struct PredictionMarket.Result storage ref"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "loser",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41,
                            "src": "957:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Side_$37",
                              "typeString": "enum PredictionMarket.Side"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "952:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 132,
                          "name": "gamblerBet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "973:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "952:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "baseExpression": {
                          "id": 134,
                          "name": "bets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "986:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
                            "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                          }
                        },
                        "id": 137,
                        "indexExpression": {
                          "expression": {
                            "id": 135,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "991:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Result_$42_storage",
                              "typeString": "struct PredictionMarket.Result storage ref"
                            }
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "winner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "991:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$37",
                            "typeString": "enum PredictionMarket.Side"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "986:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "952:53:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "939:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "927:78:1"
                },
                {
                  "expression": {
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 141,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "1015:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$37_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 146,
                        "indexExpression": {
                          "expression": {
                            "id": 142,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1030:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1030:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1015:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 147,
                      "indexExpression": {
                        "expression": {
                          "id": 144,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "1042:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$37_$",
                            "typeString": "type(enum PredictionMarket.Side)"
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Macron",
                        "nodeType": "MemberAccess",
                        "src": "1042:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$37",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1015:39:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1057:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1015:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1015:43:1"
                },
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 151,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "1068:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$37_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 156,
                        "indexExpression": {
                          "expression": {
                            "id": 152,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1083:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1083:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1068:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 157,
                      "indexExpression": {
                        "expression": {
                          "id": 154,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "1095:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$37_$",
                            "typeString": "type(enum PredictionMarket.Side)"
                          }
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Lepen",
                        "nodeType": "MemberAccess",
                        "src": "1095:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$37",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1068:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1109:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1068:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "1068:42:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 166,
                        "name": "gain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "1140:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 161,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1120:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1120:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1120:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1120:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "1120:25:1"
                }
              ]
            },
            "functionSelector": "2b539c86",
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawGain",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "700:2:1"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "712:0:1"
            },
            "scope": 210,
            "src": "679:473:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "1216:226:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 178,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "1234:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 179,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1244:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1244:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1234:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206f7261636c65",
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1256:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc6b85902536b0f8487034b3ecf1e60a795dc2f76885f36df68d2eea7b0bd42d",
                          "typeString": "literal_string \"only oracle\""
                        },
                        "value": "only oracle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc6b85902536b0f8487034b3ecf1e60a795dc2f76885f36df68d2eea7b0bd42d",
                          "typeString": "literal_string \"only oracle\""
                        }
                      ],
                      "id": 177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1226:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1226:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "1226:44:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 186,
                          "name": "electionFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "1288:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1308:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1288:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656c656374696f6e2069732066696e6973686564",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1315:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b986f5898326f417b081556bd907c58c5b8ef0652fc690b771b44307f001565f",
                          "typeString": "literal_string \"election is finished\""
                        },
                        "value": "election is finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b986f5898326f417b081556bd907c58c5b8ef0652fc690b771b44307f001565f",
                          "typeString": "literal_string \"election is finished\""
                        }
                      ],
                      "id": 185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1280:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1280:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:58:1"
                },
                {
                  "expression": {
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 192,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1348:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$42_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 194,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "1348:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$37",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 195,
                      "name": "_winner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "1364:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$37",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "src": "1348:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$37",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "1348:23:1"
                },
                {
                  "expression": {
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 198,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1381:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$42_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "loser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "1381:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$37",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 201,
                      "name": "_loser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "1396:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$37",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "src": "1381:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$37",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "1381:21:1"
                },
                {
                  "expression": {
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 204,
                      "name": "electionFinished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1412:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1431:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1412:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "1412:23:1"
                }
              ]
            },
            "functionSelector": "4ec942b7",
            "id": 209,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reportResult",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "mutability": "mutable",
                  "name": "_winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "1180:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$37",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 37,
                    "src": "1180:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$37",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "_loser",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "1194:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$37",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 37,
                    "src": "1194:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$37",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1179:27:1"
            },
            "returnParameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1216:0:1"
            },
            "scope": 210,
            "src": "1158:284:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 211,
        "src": "63:1381:1"
      }
    ],
    "src": "38:1406:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/ma/Desktop/DEV/BLOCKCHAIN-DEV/TutoYoutube/TUTO-Gamgle/contracts/PredictionMarket.sol",
      "exportedSymbols": {
        "PredictionMarket": [
          210
        ]
      },
      "license": "UNLICENSED"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".3"
          ]
        },
        "id": 34,
        "name": "PragmaDirective",
        "src": "38:23:1"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            210
          ],
          "name": "PredictionMarket",
          "scope": 211
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "PredictionMarket.Side",
              "name": "Side"
            },
            "children": [
              {
                "attributes": {
                  "name": "Macron"
                },
                "id": 35,
                "name": "EnumValue",
                "src": "107:6:1"
              },
              {
                "attributes": {
                  "name": "Lepen"
                },
                "id": 36,
                "name": "EnumValue",
                "src": "115:5:1"
              }
            ],
            "id": 37,
            "name": "EnumDefinition",
            "src": "95:27:1"
          },
          {
            "attributes": {
              "canonicalName": "PredictionMarket.Result",
              "name": "Result",
              "scope": 210,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "winner",
                  "scope": 42,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum PredictionMarket.Side",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "Side",
                      "referencedDeclaration": 37,
                      "type": "enum PredictionMarket.Side"
                    },
                    "id": 38,
                    "name": "UserDefinedTypeName",
                    "src": "151:4:1"
                  }
                ],
                "id": 39,
                "name": "VariableDeclaration",
                "src": "151:11:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "loser",
                  "scope": 42,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum PredictionMarket.Side",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "Side",
                      "referencedDeclaration": 37,
                      "type": "enum PredictionMarket.Side"
                    },
                    "id": 40,
                    "name": "UserDefinedTypeName",
                    "src": "172:4:1"
                  }
                ],
                "id": 41,
                "name": "VariableDeclaration",
                "src": "172:10:1"
              }
            ],
            "id": 42,
            "name": "StructDefinition",
            "src": "127:62:1"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "65372147",
              "mutability": "mutable",
              "name": "result",
              "scope": 210,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct PredictionMarket.Result",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "Result",
                  "referencedDeclaration": 42,
                  "type": "struct PredictionMarket.Result"
                },
                "id": 43,
                "name": "UserDefinedTypeName",
                "src": "194:6:1"
              }
            ],
            "id": 44,
            "name": "VariableDeclaration",
            "src": "194:20:1"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "7dc0d1d0",
              "mutability": "mutable",
              "name": "oracle",
              "scope": 210,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 45,
                "name": "ElementaryTypeName",
                "src": "221:7:1"
              }
            ],
            "id": 46,
            "name": "VariableDeclaration",
            "src": "221:21:1"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "beab6e7e",
              "mutability": "mutable",
              "name": "electionFinished",
              "scope": 210,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bool",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "bool",
                  "type": "bool"
                },
                "id": 47,
                "name": "ElementaryTypeName",
                "src": "248:4:1"
              }
            ],
            "id": 48,
            "name": "VariableDeclaration",
            "src": "248:28:1"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "7e0ecc00",
              "mutability": "mutable",
              "name": "bets",
              "scope": 210,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(enum PredictionMarket.Side => uint256)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(enum PredictionMarket.Side => uint256)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "Side",
                      "referencedDeclaration": 37,
                      "type": "enum PredictionMarket.Side"
                    },
                    "id": 49,
                    "name": "UserDefinedTypeName",
                    "src": "291:4:1"
                  },
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 50,
                    "name": "ElementaryTypeName",
                    "src": "299:4:1"
                  }
                ],
                "id": 51,
                "name": "Mapping",
                "src": "283:21:1"
              }
            ],
            "id": 52,
            "name": "VariableDeclaration",
            "src": "283:33:1"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "9d5a3739",
              "mutability": "mutable",
              "name": "betsPerGambler",
              "scope": 210,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => mapping(enum PredictionMarket.Side => uint256))",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 53,
                    "name": "ElementaryTypeName",
                    "src": "330:7:1"
                  },
                  {
                    "attributes": {
                      "type": "mapping(enum PredictionMarket.Side => uint256)"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Side",
                          "referencedDeclaration": 37,
                          "type": "enum PredictionMarket.Side"
                        },
                        "id": 54,
                        "name": "UserDefinedTypeName",
                        "src": "349:4:1"
                      },
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 55,
                        "name": "ElementaryTypeName",
                        "src": "357:4:1"
                      }
                    ],
                    "id": 56,
                    "name": "Mapping",
                    "src": "341:21:1"
                  }
                ],
                "id": 57,
                "name": "Mapping",
                "src": "322:41:1"
              }
            ],
            "id": 58,
            "name": "VariableDeclaration",
            "src": "322:63:1"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 210,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_oracle",
                      "scope": 68,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 59,
                        "name": "ElementaryTypeName",
                        "src": "404:7:1"
                      }
                    ],
                    "id": 60,
                    "name": "VariableDeclaration",
                    "src": "404:15:1"
                  }
                ],
                "id": 61,
                "name": "ParameterList",
                "src": "403:17:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 62,
                "name": "ParameterList",
                "src": "421:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 46,
                              "type": "address",
                              "value": "oracle"
                            },
                            "id": 63,
                            "name": "Identifier",
                            "src": "431:6:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 60,
                              "type": "address",
                              "value": "_oracle"
                            },
                            "id": 64,
                            "name": "Identifier",
                            "src": "440:7:1"
                          }
                        ],
                        "id": 65,
                        "name": "Assignment",
                        "src": "431:16:1"
                      }
                    ],
                    "id": 66,
                    "name": "ExpressionStatement",
                    "src": "431:16:1"
                  }
                ],
                "id": 67,
                "name": "Block",
                "src": "421:33:1"
              }
            ],
            "id": 68,
            "name": "FunctionDefinition",
            "src": "392:62:1"
          },
          {
            "attributes": {
              "functionSelector": "43046844",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "placeBet",
              "scope": 210,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_side",
                      "scope": 98,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum PredictionMarket.Side",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Side",
                          "referencedDeclaration": 37,
                          "type": "enum PredictionMarket.Side"
                        },
                        "id": 69,
                        "name": "UserDefinedTypeName",
                        "src": "478:4:1"
                      }
                    ],
                    "id": 70,
                    "name": "VariableDeclaration",
                    "src": "478:10:1"
                  }
                ],
                "id": 71,
                "name": "ParameterList",
                "src": "477:12:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 72,
                "name": "ParameterList",
                "src": "507:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b986f5898326f417b081556bd907c58c5b8ef0652fc690b771b44307f001565f",
                                  "typeString": "literal_string \"election is finished\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 73,
                            "name": "Identifier",
                            "src": "517:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 48,
                                  "type": "bool",
                                  "value": "electionFinished"
                                },
                                "id": 74,
                                "name": "Identifier",
                                "src": "525:16:1"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 75,
                                "name": "Literal",
                                "src": "545:5:1"
                              }
                            ],
                            "id": 76,
                            "name": "BinaryOperation",
                            "src": "525:25:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "656c656374696f6e2069732066696e6973686564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"election is finished\"",
                              "value": "election is finished"
                            },
                            "id": 77,
                            "name": "Literal",
                            "src": "552:22:1"
                          }
                        ],
                        "id": 78,
                        "name": "FunctionCall",
                        "src": "517:58:1"
                      }
                    ],
                    "id": 79,
                    "name": "ExpressionStatement",
                    "src": "517:58:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "+=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 52,
                                  "type": "mapping(enum PredictionMarket.Side => uint256)",
                                  "value": "bets"
                                },
                                "id": 80,
                                "name": "Identifier",
                                "src": "585:4:1"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 70,
                                  "type": "enum PredictionMarket.Side",
                                  "value": "_side"
                                },
                                "id": 81,
                                "name": "Identifier",
                                "src": "590:5:1"
                              }
                            ],
                            "id": 82,
                            "name": "IndexAccess",
                            "src": "585:11:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "value",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 83,
                                "name": "Identifier",
                                "src": "600:3:1"
                              }
                            ],
                            "id": 84,
                            "name": "MemberAccess",
                            "src": "600:9:1"
                          }
                        ],
                        "id": 85,
                        "name": "Assignment",
                        "src": "585:24:1"
                      }
                    ],
                    "id": 86,
                    "name": "ExpressionStatement",
                    "src": "585:24:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "+=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(enum PredictionMarket.Side => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 58,
                                      "type": "mapping(address => mapping(enum PredictionMarket.Side => uint256))",
                                      "value": "betsPerGambler"
                                    },
                                    "id": 87,
                                    "name": "Identifier",
                                    "src": "619:14:1"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 88,
                                        "name": "Identifier",
                                        "src": "634:3:1"
                                      }
                                    ],
                                    "id": 89,
                                    "name": "MemberAccess",
                                    "src": "634:10:1"
                                  }
                                ],
                                "id": 91,
                                "name": "IndexAccess",
                                "src": "619:26:1"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 70,
                                  "type": "enum PredictionMarket.Side",
                                  "value": "_side"
                                },
                                "id": 90,
                                "name": "Identifier",
                                "src": "646:5:1"
                              }
                            ],
                            "id": 92,
                            "name": "IndexAccess",
                            "src": "619:33:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "value",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 93,
                                "name": "Identifier",
                                "src": "656:3:1"
                              }
                            ],
                            "id": 94,
                            "name": "MemberAccess",
                            "src": "656:9:1"
                          }
                        ],
                        "id": 95,
                        "name": "Assignment",
                        "src": "619:46:1"
                      }
                    ],
                    "id": 96,
                    "name": "ExpressionStatement",
                    "src": "619:46:1"
                  }
                ],
                "id": 97,
                "name": "Block",
                "src": "507:166:1"
              }
            ],
            "id": 98,
            "name": "FunctionDefinition",
            "src": "460:213:1"
          },
          {
            "attributes": {
              "functionSelector": "2b539c86",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawGain",
              "scope": 210,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 99,
                "name": "ParameterList",
                "src": "700:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 100,
                "name": "ParameterList",
                "src": "712:0:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        102
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "gamblerBet",
                          "scope": 169,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 101,
                            "name": "ElementaryTypeName",
                            "src": "722:4:1"
                          }
                        ],
                        "id": 102,
                        "name": "VariableDeclaration",
                        "src": "722:15:1"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "mapping(enum PredictionMarket.Side => uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 58,
                                  "type": "mapping(address => mapping(enum PredictionMarket.Side => uint256))",
                                  "value": "betsPerGambler"
                                },
                                "id": 103,
                                "name": "Identifier",
                                "src": "740:14:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 104,
                                    "name": "Identifier",
                                    "src": "755:3:1"
                                  }
                                ],
                                "id": 105,
                                "name": "MemberAccess",
                                "src": "755:10:1"
                              }
                            ],
                            "id": 106,
                            "name": "IndexAccess",
                            "src": "740:26:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "winner",
                              "referencedDeclaration": 39,
                              "type": "enum PredictionMarket.Side"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 44,
                                  "type": "struct PredictionMarket.Result storage ref",
                                  "value": "result"
                                },
                                "id": 107,
                                "name": "Identifier",
                                "src": "767:6:1"
                              }
                            ],
                            "id": 108,
                            "name": "MemberAccess",
                            "src": "767:13:1"
                          }
                        ],
                        "id": 109,
                        "name": "IndexAccess",
                        "src": "740:41:1"
                      }
                    ],
                    "id": 110,
                    "name": "VariableDeclarationStatement",
                    "src": "722:59:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_580c326cdba3173fc617bf584c3e1a4fdc48208658005920e02bf236cdbddda5",
                                  "typeString": "literal_string \"you do not have any winning bet\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 111,
                            "name": "Identifier",
                            "src": "791:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 102,
                                  "type": "uint256",
                                  "value": "gamblerBet"
                                },
                                "id": 112,
                                "name": "Identifier",
                                "src": "799:10:1"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 113,
                                "name": "Literal",
                                "src": "812:1:1"
                              }
                            ],
                            "id": 114,
                            "name": "BinaryOperation",
                            "src": "799:14:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "796f7520646f206e6f74206861766520616e792077696e6e696e6720626574",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"you do not have any winning bet\"",
                              "value": "you do not have any winning bet"
                            },
                            "id": 115,
                            "name": "Literal",
                            "src": "815:33:1"
                          }
                        ],
                        "id": 116,
                        "name": "FunctionCall",
                        "src": "791:58:1"
                      }
                    ],
                    "id": 117,
                    "name": "ExpressionStatement",
                    "src": "791:58:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e7e6bdb27abe05a89bb6860279b9b8caf97f66bf335fd3b12194199de6a23f11",
                                  "typeString": "literal_string \"election not finished\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 118,
                            "name": "Identifier",
                            "src": "859:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 48,
                                  "type": "bool",
                                  "value": "electionFinished"
                                },
                                "id": 119,
                                "name": "Identifier",
                                "src": "867:16:1"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 120,
                                "name": "Literal",
                                "src": "887:4:1"
                              }
                            ],
                            "id": 121,
                            "name": "BinaryOperation",
                            "src": "867:24:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "656c656374696f6e206e6f742066696e6973686564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"election not finished\"",
                              "value": "election not finished"
                            },
                            "id": 122,
                            "name": "Literal",
                            "src": "893:23:1"
                          }
                        ],
                        "id": 123,
                        "name": "FunctionCall",
                        "src": "859:58:1"
                      }
                    ],
                    "id": 124,
                    "name": "ExpressionStatement",
                    "src": "859:58:1"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        126
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "gain",
                          "scope": 169,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 125,
                            "name": "ElementaryTypeName",
                            "src": "927:4:1"
                          }
                        ],
                        "id": 126,
                        "name": "VariableDeclaration",
                        "src": "927:9:1"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "+",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 102,
                              "type": "uint256",
                              "value": "gamblerBet"
                            },
                            "id": 127,
                            "name": "Identifier",
                            "src": "939:10:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "/",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "*",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 52,
                                          "type": "mapping(enum PredictionMarket.Side => uint256)",
                                          "value": "bets"
                                        },
                                        "id": 128,
                                        "name": "Identifier",
                                        "src": "952:4:1"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "loser",
                                          "referencedDeclaration": 41,
                                          "type": "enum PredictionMarket.Side"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 44,
                                              "type": "struct PredictionMarket.Result storage ref",
                                              "value": "result"
                                            },
                                            "id": 129,
                                            "name": "Identifier",
                                            "src": "957:6:1"
                                          }
                                        ],
                                        "id": 130,
                                        "name": "MemberAccess",
                                        "src": "957:12:1"
                                      }
                                    ],
                                    "id": 131,
                                    "name": "IndexAccess",
                                    "src": "952:18:1"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 102,
                                      "type": "uint256",
                                      "value": "gamblerBet"
                                    },
                                    "id": 132,
                                    "name": "Identifier",
                                    "src": "973:10:1"
                                  }
                                ],
                                "id": 133,
                                "name": "BinaryOperation",
                                "src": "952:31:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 52,
                                      "type": "mapping(enum PredictionMarket.Side => uint256)",
                                      "value": "bets"
                                    },
                                    "id": 134,
                                    "name": "Identifier",
                                    "src": "986:4:1"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "winner",
                                      "referencedDeclaration": 39,
                                      "type": "enum PredictionMarket.Side"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 44,
                                          "type": "struct PredictionMarket.Result storage ref",
                                          "value": "result"
                                        },
                                        "id": 135,
                                        "name": "Identifier",
                                        "src": "991:6:1"
                                      }
                                    ],
                                    "id": 136,
                                    "name": "MemberAccess",
                                    "src": "991:13:1"
                                  }
                                ],
                                "id": 137,
                                "name": "IndexAccess",
                                "src": "986:19:1"
                              }
                            ],
                            "id": 138,
                            "name": "BinaryOperation",
                            "src": "952:53:1"
                          }
                        ],
                        "id": 139,
                        "name": "BinaryOperation",
                        "src": "939:66:1"
                      }
                    ],
                    "id": 140,
                    "name": "VariableDeclarationStatement",
                    "src": "927:78:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(enum PredictionMarket.Side => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 58,
                                      "type": "mapping(address => mapping(enum PredictionMarket.Side => uint256))",
                                      "value": "betsPerGambler"
                                    },
                                    "id": 141,
                                    "name": "Identifier",
                                    "src": "1015:14:1"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 142,
                                        "name": "Identifier",
                                        "src": "1030:3:1"
                                      }
                                    ],
                                    "id": 143,
                                    "name": "MemberAccess",
                                    "src": "1030:10:1"
                                  }
                                ],
                                "id": 146,
                                "name": "IndexAccess",
                                "src": "1015:26:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "Macron",
                                  "type": "enum PredictionMarket.Side"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 37,
                                      "type": "type(enum PredictionMarket.Side)",
                                      "value": "Side"
                                    },
                                    "id": 144,
                                    "name": "Identifier",
                                    "src": "1042:4:1"
                                  }
                                ],
                                "id": 145,
                                "name": "MemberAccess",
                                "src": "1042:11:1"
                              }
                            ],
                            "id": 147,
                            "name": "IndexAccess",
                            "src": "1015:39:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 148,
                            "name": "Literal",
                            "src": "1057:1:1"
                          }
                        ],
                        "id": 149,
                        "name": "Assignment",
                        "src": "1015:43:1"
                      }
                    ],
                    "id": 150,
                    "name": "ExpressionStatement",
                    "src": "1015:43:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(enum PredictionMarket.Side => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 58,
                                      "type": "mapping(address => mapping(enum PredictionMarket.Side => uint256))",
                                      "value": "betsPerGambler"
                                    },
                                    "id": 151,
                                    "name": "Identifier",
                                    "src": "1068:14:1"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 152,
                                        "name": "Identifier",
                                        "src": "1083:3:1"
                                      }
                                    ],
                                    "id": 153,
                                    "name": "MemberAccess",
                                    "src": "1083:10:1"
                                  }
                                ],
                                "id": 156,
                                "name": "IndexAccess",
                                "src": "1068:26:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "Lepen",
                                  "type": "enum PredictionMarket.Side"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 37,
                                      "type": "type(enum PredictionMarket.Side)",
                                      "value": "Side"
                                    },
                                    "id": 154,
                                    "name": "Identifier",
                                    "src": "1095:4:1"
                                  }
                                ],
                                "id": 155,
                                "name": "MemberAccess",
                                "src": "1095:10:1"
                              }
                            ],
                            "id": 157,
                            "name": "IndexAccess",
                            "src": "1068:38:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 158,
                            "name": "Literal",
                            "src": "1109:1:1"
                          }
                        ],
                        "id": 159,
                        "name": "Assignment",
                        "src": "1068:42:1"
                      }
                    ],
                    "id": 160,
                    "name": "ExpressionStatement",
                    "src": "1068:42:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transfer",
                              "type": "function (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 161,
                                    "name": "Identifier",
                                    "src": "1120:3:1"
                                  }
                                ],
                                "id": 164,
                                "name": "MemberAccess",
                                "src": "1120:10:1"
                              }
                            ],
                            "id": 165,
                            "name": "MemberAccess",
                            "src": "1120:19:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 126,
                              "type": "uint256",
                              "value": "gain"
                            },
                            "id": 166,
                            "name": "Identifier",
                            "src": "1140:4:1"
                          }
                        ],
                        "id": 167,
                        "name": "FunctionCall",
                        "src": "1120:25:1"
                      }
                    ],
                    "id": 168,
                    "name": "ExpressionStatement",
                    "src": "1120:25:1"
                  }
                ],
                "id": 169,
                "name": "Block",
                "src": "712:440:1"
              }
            ],
            "id": 170,
            "name": "FunctionDefinition",
            "src": "679:473:1"
          },
          {
            "attributes": {
              "functionSelector": "4ec942b7",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "reportResult",
              "scope": 210,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_winner",
                      "scope": 209,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum PredictionMarket.Side",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Side",
                          "referencedDeclaration": 37,
                          "type": "enum PredictionMarket.Side"
                        },
                        "id": 171,
                        "name": "UserDefinedTypeName",
                        "src": "1180:4:1"
                      }
                    ],
                    "id": 172,
                    "name": "VariableDeclaration",
                    "src": "1180:12:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_loser",
                      "scope": 209,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum PredictionMarket.Side",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Side",
                          "referencedDeclaration": 37,
                          "type": "enum PredictionMarket.Side"
                        },
                        "id": 173,
                        "name": "UserDefinedTypeName",
                        "src": "1194:4:1"
                      }
                    ],
                    "id": 174,
                    "name": "VariableDeclaration",
                    "src": "1194:11:1"
                  }
                ],
                "id": 175,
                "name": "ParameterList",
                "src": "1179:27:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 176,
                "name": "ParameterList",
                "src": "1216:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_dc6b85902536b0f8487034b3ecf1e60a795dc2f76885f36df68d2eea7b0bd42d",
                                  "typeString": "literal_string \"only oracle\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 177,
                            "name": "Identifier",
                            "src": "1226:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 46,
                                  "type": "address",
                                  "value": "oracle"
                                },
                                "id": 178,
                                "name": "Identifier",
                                "src": "1234:6:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 179,
                                    "name": "Identifier",
                                    "src": "1244:3:1"
                                  }
                                ],
                                "id": 180,
                                "name": "MemberAccess",
                                "src": "1244:10:1"
                              }
                            ],
                            "id": 181,
                            "name": "BinaryOperation",
                            "src": "1234:20:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "6f6e6c79206f7261636c65",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"only oracle\"",
                              "value": "only oracle"
                            },
                            "id": 182,
                            "name": "Literal",
                            "src": "1256:13:1"
                          }
                        ],
                        "id": 183,
                        "name": "FunctionCall",
                        "src": "1226:44:1"
                      }
                    ],
                    "id": 184,
                    "name": "ExpressionStatement",
                    "src": "1226:44:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b986f5898326f417b081556bd907c58c5b8ef0652fc690b771b44307f001565f",
                                  "typeString": "literal_string \"election is finished\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 185,
                            "name": "Identifier",
                            "src": "1280:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 48,
                                  "type": "bool",
                                  "value": "electionFinished"
                                },
                                "id": 186,
                                "name": "Identifier",
                                "src": "1288:16:1"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 187,
                                "name": "Literal",
                                "src": "1308:5:1"
                              }
                            ],
                            "id": 188,
                            "name": "BinaryOperation",
                            "src": "1288:25:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "656c656374696f6e2069732066696e6973686564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"election is finished\"",
                              "value": "election is finished"
                            },
                            "id": 189,
                            "name": "Literal",
                            "src": "1315:22:1"
                          }
                        ],
                        "id": 190,
                        "name": "FunctionCall",
                        "src": "1280:58:1"
                      }
                    ],
                    "id": 191,
                    "name": "ExpressionStatement",
                    "src": "1280:58:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum PredictionMarket.Side"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "winner",
                              "referencedDeclaration": 39,
                              "type": "enum PredictionMarket.Side"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 44,
                                  "type": "struct PredictionMarket.Result storage ref",
                                  "value": "result"
                                },
                                "id": 192,
                                "name": "Identifier",
                                "src": "1348:6:1"
                              }
                            ],
                            "id": 194,
                            "name": "MemberAccess",
                            "src": "1348:13:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 172,
                              "type": "enum PredictionMarket.Side",
                              "value": "_winner"
                            },
                            "id": 195,
                            "name": "Identifier",
                            "src": "1364:7:1"
                          }
                        ],
                        "id": 196,
                        "name": "Assignment",
                        "src": "1348:23:1"
                      }
                    ],
                    "id": 197,
                    "name": "ExpressionStatement",
                    "src": "1348:23:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum PredictionMarket.Side"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "loser",
                              "referencedDeclaration": 41,
                              "type": "enum PredictionMarket.Side"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 44,
                                  "type": "struct PredictionMarket.Result storage ref",
                                  "value": "result"
                                },
                                "id": 198,
                                "name": "Identifier",
                                "src": "1381:6:1"
                              }
                            ],
                            "id": 200,
                            "name": "MemberAccess",
                            "src": "1381:12:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 174,
                              "type": "enum PredictionMarket.Side",
                              "value": "_loser"
                            },
                            "id": 201,
                            "name": "Identifier",
                            "src": "1396:6:1"
                          }
                        ],
                        "id": 202,
                        "name": "Assignment",
                        "src": "1381:21:1"
                      }
                    ],
                    "id": 203,
                    "name": "ExpressionStatement",
                    "src": "1381:21:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 48,
                              "type": "bool",
                              "value": "electionFinished"
                            },
                            "id": 204,
                            "name": "Identifier",
                            "src": "1412:16:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 205,
                            "name": "Literal",
                            "src": "1431:4:1"
                          }
                        ],
                        "id": 206,
                        "name": "Assignment",
                        "src": "1412:23:1"
                      }
                    ],
                    "id": 207,
                    "name": "ExpressionStatement",
                    "src": "1412:23:1"
                  }
                ],
                "id": 208,
                "name": "Block",
                "src": "1216:226:1"
              }
            ],
            "id": 209,
            "name": "FunctionDefinition",
            "src": "1158:284:1"
          }
        ],
        "id": 210,
        "name": "ContractDefinition",
        "src": "63:1381:1"
      }
    ],
    "id": 211,
    "name": "SourceUnit",
    "src": "38:1406:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.3+commit.9bfce1f6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-25T18:22:20.045Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}